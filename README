Stadium Ticket RESTful API for GNU, Linux, macOS and Unix.

This project has been built and tested with Python versions 3.6 and
3.7 on the platforms shown below:

+---------+---------------+--------------------------------+
| OS Type | Distribution  | OS Version (Architectures)     |
*=========*===============*================================*
| GNU     | Debian        | 10 (i686)                      |
+---------+---------------+--------------------------------+
| Linux   | CentOS        | 7 (amd64)                      |
+---------+---------------+--------------------------------+
| Linux   | Debian        | 9 (amd64, s390), 10 (amd64)    |
+---------+---------------+--------------------------------+
| Linux   | Fedora        | 30 (amd64)                     |
+---------+---------------+--------------------------------+
| Linux   | openSUSE Leap | 15.0 (amd64), 15.1 (amd64)     |
+---------+---------------+--------------------------------+
| Linux   | Raspbian      | 10 (armv7l)                    |
+---------+---------------+--------------------------------+
| Linux   | Ubuntu        | 18.04 (amd64), 19.04 (amd64)   |
+---------+---------------+--------------------------------+
| Unix    | macOS         | 10.14 (amd64)                  |
+---------+---------------+--------------------------------+
| Unix    | FreeBSD       | 11.3 (amd64), 12.0 (amd64)     |
+---------+---------------+--------------------------------+
| Unix    | OpenIndiana   | 2019.04 (amd64)                |
+---------+---------------+--------------------------------+

Installation as a service has been successfully tested on the
platforms shown below:

+---------+---------------+--------------------------------+
| OS Type | Distribution  | OS Version (Architectures)     |
*=========*===============*================================*
| Linux   | CentOS        | 7 (amd64)                      |
+---------+---------------+--------------------------------+
| Linux   | Debian        | 9 (amd64, s390), 10 (amd64)    |
+---------+---------------+--------------------------------+
| Linux   | Fedora        | 30 (amd64)                     |
+---------+---------------+--------------------------------+
| Linux   | openSUSE Leap | 15.0 (amd64), 15.1 (amd64)     |
+---------+---------------+--------------------------------+
| Linux   | Ubuntu        | 18.04 (amd64), 19.04 (amd64)   |
+---------+---------------+--------------------------------+

1.  To install dependencies (may require sudo):

    scripts/install-dependencies.sh

2.  To initialize the database schema:

    scripts/run.sh python3 -m app init-db (or "make init-db")

3.  To run the unit tests using pytest:

    scripts/run.sh pytest (or "make pytest")

4.  To run the app in debugging mode:

    scripts/run.sh flask run (or "make debug")

5.  To test the app:

    scripts/app-test.sh (or "make client")

6.  To stress test the app:

    scripts/load-test.sh (or "make stress")

7.  Build and run multi-container application with Docker (may require sudo):

    scripts/install-docker.sh
    docker-compose up --build (or "make compose")

8.  To install the app as a service (may require sudo):

    scripts/install-service.sh (or "make install")

9.  To start the app running as a service (may require sudo):

    scripts/start-service.sh (or "make start")

10. To stop the app running as a service (may require sudo):

    scripts/stop-service.sh (or "make stop")

11. To uninstall the app as a service (may require sudo):

    scripts/uninstall-service.sh (or "make uninstall")

12. To report the current app as a service status:

    scripts/get-service-status.sh (or "make status")
