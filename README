Stadium Ticket Flask RESTful API for GNU/Hurd, GNU/Linux, and Unix.

This project has been tested with Python 3.6 and 3.7 on the following
platforms:

+===========+==================+===============================+
| OS Family | OS Distribution  | OS Versions (OS Ports)        |
+===========+==================+===============================+
| GNU/Hurd  | Debian           | 10 (i686)                     |
+-----------+------------------+-------------------------------+
| GNU/Linux | CentOS           | 7 (amd64)                     |
+-----------+------------------+-------------------------------+
| GNU/Linux | Debian/Raspbian  | 10 (amd64, armv7l, s390x)     |
+-----------+------------------+-------------------------------+
| GNU/Linux | Fedora           | 30 (amd64)                    |
+-----------+------------------+-------------------------------+
| GNU/Linux | openSUSE Leap    | 15.1 (amd64)                  |
+-----------+------------------+-------------------------------+
| GNU/Linux | Oracle Linux     | 8.0 (amd64)                   |
+-----------+------------------+-------------------------------+
| GNU/Linux | Ubuntu           | 18.04 (amd64), 19.04 (amd64)  |
+-----------+------------------+-------------------------------+
| Unix      | Darwin (macOS)   | 10.14 (amd64)                 |
+-----------+------------------+-------------------------------+
| Unix      | FreeBSD          | 11.3 (amd64), 12.0 (amd64)    |
+-----------+------------------+-------------------------------+
| Unix      | OpenIndiana      | 2019.04 (amd64)               |
+-----------+------------------+-------------------------------+

Installation as a service has been tested on the following platforms:

+===========+==================+===============================+
| OS Family | OS Distribution  | OS Versions (OS Ports)        |
+===========+==================+===============================+
| GNU/Linux | Debian/Raspbian  | 10 (amd64, armv7l, s390x)     |
+-----------+------------------+-------------------------------+
| GNU/Linux | Fedora           | 30 (amd64)                    |
+-----------+------------------+-------------------------------+
| GNU/Linux | openSUSE Leap    | 15.1 (amd64)                  |
+-----------+------------------+-------------------------------+
| GNU/Linux | Ubuntu           | 18.04 (amd64), 19.04 (amd64)  |
+-----------+------------------+-------------------------------+

The various OS ports have been tested on the following processors:

+================+==============================+==============+
| CPU ISA        | CPU Vendor and Model (Clock) | OS Port (b)  |
+----------------+------------------------------+--------------+
| ARMv8-A        | ARM Cortex-A53      (1.2GHz) | arm7l (32b)  |
+----------------+------------------------------+--------------+
| x86-64         | Intel Core i7-4790K (4.0GHz) | amd64 (64b), |
|                |                              | i686  (32b)  |
+----------------+------------------------------+--------------+
| z/Architecture | IBM zSeries 900   (emulated) | s390x (64b)  |
+----------------+------------------------------+--------------+

1.  To install dependencies (may require root):

    scripts/install-dependencies.sh

2.  To initialize the database schema:

    scripts/run.sh python3 -m app init-db (or "make init-db")

3.  To run the unit tests using pytest:

    scripts/run.sh pytest (or "make pytest")

4.  To run the app in debugging mode:

    scripts/run.sh flask run (or "make debug")

5.  To test the app:

    scripts/app-test.sh (or "make client")

6.  To stress test the app:

    scripts/load-test.sh (or "make stress")

7.  Build and run Docker container (may require root):

    scripts/install-docker.sh
    docker-compose up --build (or "make compose")

8.  To install the app as a service (may require root):

    scripts/install-service.sh (or "make install")

9.  To start the app running as a service (may require root):

    scripts/start-service.sh (or "make start")

10. To stop the app running as a service (may require root):

    scripts/stop-service.sh (or "make stop")

11. To uninstall the app as a service (may require root):

    scripts/uninstall-service.sh (or "make uninstall")

12. To report the current app as a service status:

    scripts/get-service-status.sh (or "make status")
